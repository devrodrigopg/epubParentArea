{"version":3,"names":[],"sources":["template.ts"],"sourcesContent":["export default `\n<!DOCTYPE html>\n  <html>\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>EPUB.js</title>\n    <script id=\"jszip\"></script>\n    <script id=\"epubjs\"></script>\n\n    <style type=\"text/css\">\n      body {\n        margin: 0;\n      }\n\n      #viewer {\n        height: 100vh;\n        width: 100vw;\n        overflow: hidden !important;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      }\n    </style>\n  </head>\n\n  <body oncopy='return false' oncut='return false'>\n    <div id=\"viewer\"></div>\n\n    <script>\n      let book;\n      let rendition;\n\n      const type = window.type;\n      const file = window.book;\n      const theme = window.theme;\n      const initialLocations = window.locations;\n      const enableSelection = window.enable_selection;\n\n      if (!file) {\n        alert('Failed load book');\n      }\n\n      if (type === 'epub' || type === 'opf' || type === 'binary') {\n        book = ePub(file);\n      } else if (type === 'base64') {\n        book = ePub(file, { encoding: \"base64\" });\n      } else {\n        alert('Missing file type');\n      }\n\n      rendition = book.renderTo(\"viewer\", {\n        width: \"100%\",\n        height: \"100%\",\n      });\n\n      window.ReactNativeWebView.postMessage(JSON.stringify({ type: \"onStarted\" }));\n\n      book.ready\n        .then(function () {\n          if (initialLocations) {\n            return book.locations.load(initialLocations);\n          }\n\n          book.locations.generate(1600).then(function () {\n            window.ReactNativeWebView.postMessage(JSON.stringify({\n              type: \"onLocationsReady\",\n              epubKey: book.key(),\n              locations: book.locations.save(),\n            }));\n          });\n        })\n        .then(function () {\n          var displayed = rendition.display();\n\n          displayed.then(function () {\n            var currentLocation = rendition.currentLocation();\n\n            window.ReactNativeWebView.postMessage(JSON.stringify({\n              type: \"onReady\",\n              totalLocations: book.locations.total,\n              currentLocation: currentLocation,\n              progress: book.locations.percentageFromCfi(currentLocation.start.cfi),\n            }));\n          });\n\n          book\n          .coverUrl()\n          .then(async (url) => {\n            var reader = new FileReader();\n            reader.onload = (res) => {\n              window.ReactNativeWebView.postMessage(\n                JSON.stringify({\n                  type: \"meta\",\n                  metadata: {\n                    cover: reader.result,\n                    author: book.package.metadata.creator,\n                    title: book.package.metadata.title,\n                    description: book.package.metadata.description,\n                    language: book.package.metadata.language,\n                    publisher: book.package.metadata.publisher,\n                    rights: book.package.metadata.rights,\n                  },\n                })\n              );\n            };\n            reader.readAsDataURL(await fetch(url).then((res) => res.blob()));\n          })\n          .catch(() => {\n            window.ReactNativeWebView.postMessage(\n              JSON.stringify({\n                type: \"meta\",\n                metadata: {\n                  cover: undefined,\n                  author: book.package.metadata.creator,\n                  title: book.package.metadata.title,\n                  description: book.package.metadata.description,\n                  language: book.package.metadata.language,\n                  publisher: book.package.metadata.publisher,\n                  rights: book.package.metadata.rights,\n                },\n              })\n            );\n          });\n\n          book.loaded.navigation.then(function (toc) {\n            window.ReactNativeWebView.postMessage(JSON.stringify({\n              type: 'onNavigationLoaded',\n              toc: toc,\n            }));\n          });\n        })\n        .catch(function (err) {\n          window.ReactNativeWebView.postMessage(JSON.stringify({\n          type: \"onDisplayError\",\n          reason: reason\n        }));\n      });\n\n      rendition.on('started', () => {\n        rendition.themes.register({ theme: theme });\n        rendition.themes.select('theme');\n      });\n\n      rendition.on(\"relocated\", function (location) {\n        var percent = book.locations.percentageFromCfi(location.start.cfi);\n        var percentage = Math.floor(percent * 100);\n\n        window.ReactNativeWebView.postMessage(JSON.stringify({\n          type: \"onLocationChange\",\n          totalLocations: book.locations.total,\n          currentLocation: location,\n          progress: percentage,\n        }));\n\n        if (location.atStart) {\n          window.ReactNativeWebView.postMessage(JSON.stringify({\n            type: \"onBeginning\",\n          }));\n        }\n\n        if (location.atEnd) {\n          window.ReactNativeWebView.postMessage(JSON.stringify({\n            type: \"onFinish\",\n          }));\n        }\n      });\n\n      rendition.on(\"orientationchange\", function (orientation) {\n        window.ReactNativeWebView.postMessage(JSON.stringify({\n          type: 'onOrientationChange',\n          orientation: orientation\n        }));\n      });\n\n      rendition.on(\"rendered\", function (section) {\n        window.ReactNativeWebView.postMessage(JSON.stringify({\n          type: 'onRendered',\n          section: section,\n          currentSection: book.navigation.get(section.href),\n        }));\n      });\n\n      rendition.on(\"layout\", function (layout) {\n        window.ReactNativeWebView.postMessage(JSON.stringify({\n          type: 'onLayout',\n          layout: layout,\n        }));\n      });\n\n      rendition.on(\"selected\", function (cfiRange, contents) {\n        rendition.annotations.add(\"highlight\", cfiRange, {}, (e) => {\n          console.log(\"highlight clicked\", e.target);\n        });\n\n        contents.window.getSelection().removeAllRanges();\n          book.getRange(cfiRange).then(function (range) {\n            if (range) {\n              window.ReactNativeWebView.postMessage(JSON.stringify({\n                type: 'onSelected',\n                cfiRange: cfiRange,\n                text: range.toString(),\n              }));\n            }\n          });\n        });\n\n        rendition.on(\"markClicked\", function (cfiRange, contents) {\n          rendition.annotations.remove(cfiRange, \"highlight\");\n          book.getRange(cfiRange).then(function (range) {\n            if (range) {\n              window.ReactNativeWebView.postMessage(JSON.stringify({\n                type: 'onMarkPressed',\n                cfiRange: cfiRange,\n                text: range.toString(),\n              }));\n            }\n          });\n        });\n\n        rendition.on(\"resized\", function (layout) {\n          window.ReactNativeWebView.postMessage(JSON.stringify({\n            type: 'onResized',\n            layout: layout,\n          }));\n        });\n    </script>\n  </body>\n</html>\n`;\n"],"mappings":"AAAA,eAAgB;AACh}