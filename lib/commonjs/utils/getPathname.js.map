{"version":3,"names":["_sourceType","require","_getSourceType","getSourceName","source","extension","getSourceType","randomName","Date","now","toString","SourceType","BASE64","EPUB","OPF","undefined"],"sources":["getPathname.ts"],"sourcesContent":["import { SourceType } from './enums/source-type.enum';\nimport { getSourceType } from './getSourceType';\n\nexport function getSourceName(source: string): string | undefined {\n  const extension = getSourceType(source);\n  const randomName = Date.now().toString();\n\n  if (extension === SourceType.BASE64) {\n    return randomName;\n  }\n\n  if (extension === SourceType.EPUB) {\n    return `${randomName}.epub`;\n  }\n\n  if (extension === SourceType.OPF) {\n    return `${randomName}.opf`;\n  }\n\n  return undefined;\n}\n"],"mappings":";;;;;;AAAA,IAAAA,WAAA,GAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AAEO,SAASE,aAAaA,CAACC,MAAc,EAAsB;EAChE,MAAMC,SAAS,GAAG,IAAAC,4BAAa,EAACF,MAAM,CAAC;EACvC,MAAMG,UAAU,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;EAExC,IAAIL,SAAS,KAAKM,sBAAU,CAACC,MAAM,EAAE;IACnC,OAAOL,UAAU;EACnB;EAEA,IAAIF,SAAS,KAAKM,sBAAU,CAACE,IAAI,EAAE;IACjC,OAAQ,GAAEN,UAAW,OAAM;EAC7B;EAEA,IAAIF,SAAS,KAAKM,sBAAU,CAACG,GAAG,EAAE;IAChC,OAAQ,GAAEP,UAAW,MAAK;EAC5B;EAEA,OAAOQ,SAAS;AAClB"}